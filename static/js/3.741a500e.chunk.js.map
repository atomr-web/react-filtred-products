{"version":3,"sources":["components/ProductRow.js","components/ProductCategoryRow.js","components/ProductTable.js"],"names":["ProductRow","className","this","props","product","stocked","name","price","React","Component","ProductCategoryRow","category","ProductTable","filterText","isStockOnly","items","lastCategory","products","forEach","indexOf","push","key"],"mappings":"gNAEqBA,E,uKAEjB,OACE,yBACEC,UACE,gBAAkBC,KAAKC,MAAMC,QAAQC,QAAU,UAAY,KAG7D,yBAAKJ,UAAU,qBAAqBC,KAAKC,MAAMC,QAAQE,MACvD,yBAAKL,UAAU,sBAAsBC,KAAKC,MAAMC,QAAQG,Y,GATxBC,IAAMC,WCAzBC,E,uKAEjB,IAAMC,EAAWT,KAAKC,MAAMQ,SAE5B,OAAO,yBAAKV,UAAU,oBAAoBU,O,GAJEH,IAAMC,WCEjCG,E,uKAEjB,IAAMC,EAAaX,KAAKC,MAAMU,WACxBC,EAAcZ,KAAKC,MAAMW,YAEzBC,EAAQ,GACVC,EAAe,KAqBnB,OAnBAd,KAAKC,MAAMc,SAASC,SAAQ,SAACd,IACe,IAAtCA,EAAQE,KAAKa,QAAQN,KAGrBC,IAAgBV,EAAQC,UAGxBD,EAAQO,WAAaK,GACvBD,EAAMK,KACJ,kBAAC,EAAD,CACEC,IAAKjB,EAAQO,SACbA,SAAUP,EAAQO,YAIxBI,EAAMK,KAAK,kBAAC,EAAD,CAAYC,IAAKjB,EAAQE,KAAMF,QAASA,KACnDY,EAAeZ,EAAQO,cAIvB,yBAAKV,UAAU,iBACb,yBAAKA,UAAU,wBACb,sCACA,wCAEF,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,gBAAgBc,S,GAlCCP,IAAMC","file":"static/js/3.741a500e.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default class ProductRow extends React.Component {\n  render() {\n    return (\n      <div\n        className={\n          \"product-row \" + (this.props.product.stocked ? \"instack\" : \"\")\n        }\n      >\n        <div className=\"product-row__name\">{this.props.product.name}</div>\n        <div className=\"product-row__price\">{this.props.product.price}</div>\n      </div>\n    );\n  }\n}","import React from \"react\";\n\nexport default class ProductCategoryRow extends React.Component {\n  render() {\n    const category = this.props.category;\n\n    return <div className=\"product-cat-name\">{category}</div>;\n  }\n}\n","import React from \"react\";\nimport ProductRow from \"./ProductRow\";\nimport ProductCategoryRow from \"./ProductCategoryRow\";\n\nexport default class ProductTable extends React.Component {\n  render() {\n    const filterText = this.props.filterText;\n    const isStockOnly = this.props.isStockOnly;\n\n    const items = [];\n    let lastCategory = null;\n\n    this.props.products.forEach((product) => {\n      if (product.name.indexOf(filterText) === -1) {\n        return;\n      }\n      if (isStockOnly && !product.stocked) {\n        return;\n      }\n      if (product.category !== lastCategory) {\n        items.push(\n          <ProductCategoryRow\n            key={product.category}\n            category={product.category}\n          />\n        );\n      }\n      items.push(<ProductRow key={product.name} product={product} />);\n      lastCategory = product.category;\n    });\n\n    return (\n      <div className=\"product-table\">\n        <div className=\"product-table__names\">\n          <span>Name</span>\n          <span>Price</span>\n        </div>\n        <div className=\"product-cat-container\">\n          <div className=\"product-rows\">{items}</div>\n        </div>\n      </div>\n    );\n  }\n}"],"sourceRoot":""}